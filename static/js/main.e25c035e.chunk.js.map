{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactListItem.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","components/Section/Section.module.css","components/ContactForm/ContactForm.jsx","components/ContactList/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/Container/Conteiner.jsx","components/Filter/Filter.jsx","components/Section/Section.jsx","components/Hooks/useLocalStorage.js","App.js","index.js"],"names":["module","exports","ContactForm","getContactData","useState","name","setName","number","setNumber","handleImputChange","e","currentTarget","value","resetFormField","onSubmit","preventDefault","className","s","form","fieldset","label","type","onChange","input","button","disabled","ContactListItem","onDeleteContact","listItem","text","onClick","ContactList","contactList","map","id","Container","children","container","Filter","filter","changeFilter","Section","section","useLocalStorage","key","defaultValue","JSON","parse","window","localStorage","getItem","state","setState","useEffect","setItem","stringify","App","contacts","setContacts","setFilter","contact","uuidv4","find","oldContact","toLowerCase","alert","prevState","normalizeFilter","person","includes","getFilteredContacts","contactId","cont","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,SAAW,8BAA8B,MAAQ,2BAA2B,MAAQ,2BAA2B,OAAS,8B,kBCA1ID,EAAOC,QAAU,CAAC,SAAW,kCAAkC,OAAS,kC,iBCAxED,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,MAAQ,wB,mCCAxDD,EAAOC,QAAU,CAAC,UAAY,+B,gBCA9BD,EAAOC,QAAU,CAAC,QAAU,2B,+ICmFbC,MAhFf,YAA0C,IAAnBC,EAAkB,EAAlBA,eAAkB,EAEfC,mBAAS,IAFM,mBAEhCC,EAFgC,KAE1BC,EAF0B,OAGXF,mBAAS,IAHE,mBAGhCG,EAHgC,KAGxBC,EAHwB,KAMjCC,EAAoB,SAAAC,GAAM,IAAD,EACLA,EAAEC,cAAlBN,EADqB,EACrBA,KAAMO,EADe,EACfA,MAGd,OAAQP,GACN,IAAK,OACHC,EAAQM,GACR,MAEF,IAAK,SACHJ,EAAUI,KAkBVC,EAAiB,WACrBP,EAAQ,IACRE,EAAU,KAGZ,OACE,mCACE,sBAAMM,SAhBY,SAAAJ,GACpBA,EAAEK,iBAEFZ,EAAeE,EAAME,GAErBM,KAWiCG,UAAWC,IAAEC,KAA5C,SACE,2BAAUF,UAAWC,IAAEE,SAAvB,UACE,wBAAOH,UAAWC,IAAEG,MAApB,UACE,wCACA,uBACEC,KAAK,OACLhB,KAAK,OACLO,MAAOP,EACPiB,SAAUb,EACVO,UAAWC,IAAEM,WAGjB,wBAAOP,UAAWC,IAAEG,MAApB,UACE,0CACA,uBACEC,KAAK,MACLhB,KAAK,SACLO,MAAOL,EACPe,SAAUb,EACVO,UAAWC,IAAEM,WAGjB,wBACEF,KAAK,SACLL,UAAWC,IAAEO,OACbC,WAAYpB,GAAQE,GAHtB,SAKE,0D,iCCjDGmB,MAnBf,YAA6D,IAAlCrB,EAAiC,EAAjCA,KAAME,EAA2B,EAA3BA,OAAQoB,EAAmB,EAAnBA,gBACvC,OACE,qBAAIX,UAAWC,IAAEW,SAAjB,UACE,oBAAGZ,UAAWC,IAAEY,KAAhB,UACGxB,EADH,KACWE,KAEX,wBAAQc,KAAK,SAASL,UAAWC,IAAEO,OAAQM,QAASH,EAApD,wBCeSI,MApBf,YAAwD,IAAjCC,EAAgC,EAAhCA,YAAaL,EAAmB,EAAnBA,gBAClC,OACE,oBAAIX,UAAWC,IAAEe,YAAjB,SACGA,EAAYC,KAAI,gBAAGC,EAAH,EAAGA,GAAI7B,EAAP,EAAOA,KAAME,EAAb,EAAaA,OAAb,OACf,cAAC,EAAD,CAEEF,KAAMA,EACNE,OAAQA,EACRoB,gBAAiB,kBAAMA,EAAgBO,KAHlCA,S,iBCEAC,MARf,YAAkC,IAAbC,EAAY,EAAZA,SACnB,OAAO,qBAAKpB,UAAWC,IAAEoB,UAAlB,SAA8BD,K,gBCoBxBE,MArBf,YAA2C,IAAzBC,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,aACxB,OACE,wBAAOxB,UAAWC,IAAEG,MAApB,UACE,wDACA,uBACEC,KAAK,OACLhB,KAAK,SACL6B,GAAG,SACHtB,MAAO2B,EACPjB,SAAUkB,EACVxB,UAAWC,IAAEM,Y,iBCFNkB,MARf,YAAgC,IAAbL,EAAY,EAAZA,SACjB,OAAO,yBAASpB,UAAWC,IAAEyB,QAAtB,SAAgCN,KCa1BO,MAhBf,SAAyBC,EAAKC,GAAc,MAEhBzC,oBAExB,kCAAM0C,KAAKC,MAAMC,OAAOC,aAAaC,QAAQN,WAA7C,QAAsDC,KAJd,mBAEnCM,EAFmC,KAE5BC,EAF4B,KAa1C,OALAC,qBAAU,WAERL,OAAOC,aAAaK,QAAQV,EAAKE,KAAKS,UAAUJ,MAC/C,CAACP,EAAKO,IAEF,CAACA,EAAOC,IC2DFI,MAjEf,WAAe,MAEmBb,EAAgB,WAAY,IAF/C,mBAENc,EAFM,KAEIC,EAFJ,OAGef,EAAgB,SAAU,IAHzC,mBAGNJ,EAHM,KAGEoB,EAHF,KA6Cb,OACE,mCACE,eAAC,EAAD,WACE,eAAC,EAAD,WACE,2CACA,cAAC,EAAD,CAAaxD,eA5CF,SAACE,EAAME,GACxB,IACMqD,EAAU,CAAE1B,GADP2B,cACWxD,OAAME,UAG5B,GACEkD,EAASK,MACP,SAAAC,GAAU,OAAIA,EAAW1D,KAAK2D,gBAAkB3D,EAAK2D,iBAIvD,OAAOC,MAAM,GAAD,OAAI5D,EAAJ,2BAIdqD,GAAY,SAAAQ,GAAS,OAAKN,GAAL,mBAAiBM,aA+BlC,eAAC,EAAD,WACE,0CACA,cAAC,EAAD,CAAQ3B,OAAQA,EAAQC,aAxBX,SAAA9B,GAAM,IACjBE,EAAUF,EAAEC,cAAZC,MACR+C,EAAU/C,MAuBJ,cAAC,EAAD,CACEoB,YApBkB,WAE1B,IAAMmC,EAAkB5B,EAAOyB,cAE/B,OAAOP,EAASlB,QAAO,SAAA6B,GAAM,OAC3BA,EAAO/D,KAAK2D,cAAcK,SAASF,MAehBG,GACb3C,gBAhCY,SAAA4C,GACpBb,GAAY,SAAAQ,GAAS,OAAIA,EAAU3B,QAAO,SAAAiC,GAAI,OAAIA,EAAKtC,KAAOqC,oB,YC7BlEE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e25c035e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"fieldset\":\"ContactForm_fieldset__2ISqe\",\"label\":\"ContactForm_label__2SHpP\",\"input\":\"ContactForm_input__3WEMA\",\"button\":\"ContactForm_button__51Jnv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactListItem_listItem__1SgRC\",\"button\":\"ContactListItem_button__3idOb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__1e4HS\",\"input\":\"Filter_input__3ggVo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__c_d_g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2KCoX\"};","import React, { useState } from 'react';\r\nimport s from './ContactForm.module.css';\r\nimport { func } from 'prop-types';\r\n\r\nfunction ContactForm({ getContactData }) {\r\n  // === useState hook === //\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  // === пише значення в useState === //\r\n  const handleImputChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    // записує відповідне значення у відповідний useState\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  // надсилає дані у Арр при Submit\r\n  const onSubmitPress = e => {\r\n    e.preventDefault();\r\n\r\n    getContactData(name, number);\r\n\r\n    resetFormField();\r\n  };\r\n\r\n  // чистить поля name, number\r\n  const resetFormField = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmitPress} className={s.form}>\r\n        <fieldset className={s.fieldset}>\r\n          <label className={s.label}>\r\n            <span>name</span>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={name}\r\n              onChange={handleImputChange}\r\n              className={s.input}\r\n            />\r\n          </label>\r\n          <label className={s.label}>\r\n            <span>number</span>\r\n            <input\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              value={number}\r\n              onChange={handleImputChange}\r\n              className={s.input}\r\n            />\r\n          </label>\r\n          <button\r\n            type=\"submit\"\r\n            className={s.button}\r\n            disabled={!(name && number)}\r\n          >\r\n            <span>add contacts</span>\r\n          </button>\r\n        </fieldset>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nContactForm.propTypes = {\r\n  getContactData: func.isRequired,\r\n};\r\n\r\nexport default ContactForm;\r\n","import React from 'react';\r\nimport { string, func } from 'prop-types';\r\nimport s from './ContactListItem.module.css';\r\n\r\nfunction ContactListItem({ name, number, onDeleteContact }) {\r\n  return (\r\n    <li className={s.listItem}>\r\n      <p className={s.text}>\r\n        {name}: {number}\r\n      </p>\r\n      <button type=\"button\" className={s.button} onClick={onDeleteContact}>\r\n        delete\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n\r\nContactListItem.propTypes = {\r\n  name: string.isRequired,\r\n  number: string.isRequired,\r\n  onDeleteContact: func.isRequired,\r\n};\r\n\r\nexport default ContactListItem;\r\n","import React from 'react';\r\nimport { array, func } from 'prop-types';\r\nimport s from './ContactList.module.css';\r\nimport ContactListItem from './ContactListItem';\r\n\r\nfunction ContactList({ contactList, onDeleteContact }) {\r\n  return (\r\n    <ul className={s.contactList}>\r\n      {contactList.map(({ id, name, number }) => (\r\n        <ContactListItem\r\n          key={id}\r\n          name={name}\r\n          number={number}\r\n          onDeleteContact={() => onDeleteContact(id)}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contactList: array.isRequired,\r\n  onDeleteContact: func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React from 'react';\r\nimport { node } from 'prop-types';\r\nimport s from './Container.module.css';\r\n\r\nfunction Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n\r\nContainer.propTypes = {\r\n  children: node.isRequired,\r\n};\r\n\r\nexport default Container;\r\n","import React from 'react';\r\nimport { string, func } from 'prop-types';\r\nimport s from './Filter.module.css';\r\n\r\nfunction Filter({ filter, changeFilter }) {\r\n  return (\r\n    <label className={s.label}>\r\n      <span>find contact by name</span>\r\n      <input\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        id=\"filter\"\r\n        value={filter}\r\n        onChange={changeFilter}\r\n        className={s.input}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  filter: string.isRequired,\r\n  changeFilter: func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport { node } from 'prop-types';\r\nimport s from './Section.module.css';\r\n\r\nfunction Section({ children }) {\r\n  return <section className={s.section}>{children}</section>;\r\n}\r\n\r\nSection.propTypes = {\r\n  children: node.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import { useState, useEffect } from 'react';\r\n\r\nfunction useLocalStorage(key, defaultValue) {\r\n  // === useState hooks === //\r\n  const [state, setState] = useState(\r\n    // читаємо з localStorage\r\n    () => JSON.parse(window.localStorage.getItem(key)) ?? defaultValue,\r\n  );\r\n\r\n  // === useEffect hooks === //\r\n  useEffect(() => {\r\n    // оновлює запис в LocalStorage\r\n    window.localStorage.setItem(key, JSON.stringify(state));\r\n  }, [key, state]);\r\n\r\n  return [state, setState];\r\n}\r\n\r\nexport default useLocalStorage;\r\n","// import React, { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Container from './components/Container';\nimport Filter from './components/Filter/Filter';\nimport Section from './components/Section/Section';\nimport useLocalStorage from './components/Hooks/useLocalStorage';\n\nfunction App() {\n  // === user hooks === //\n  const [contacts, setContacts] = useLocalStorage('contacts', []);\n  const [filter, setFilter] = useLocalStorage('filter', '');\n\n  // === Створює новий Контакт === //\n  const addContact = (name, number) => {\n    const id = uuidv4();\n    const contact = { id, name, number };\n\n    // перевіряє введене ім'я на унікальність\n    if (\n      contacts.find(\n        oldContact => oldContact.name.toLowerCase() === name.toLowerCase(),\n      )\n    ) {\n      // повідомлення при виявлені існуючого імені\n      return alert(`${name} is already in contact`);\n    }\n\n    // додає створений контакт до списку контактів\n    setContacts(prevState => [contact, ...prevState]);\n  };\n\n  // === Видаляє контакт (клік на кнопці Delete) === //\n  const deleteContact = contactId => {\n    setContacts(prevState => prevState.filter(cont => cont.id !== contactId));\n  };\n\n  // === Оновлює значення поля Filter у стейті === //\n  const changeFilter = e => {\n    const { value } = e.currentTarget;\n    setFilter(value);\n  };\n\n  // === Шукає контакт у списку контактів === //\n  const getFilteredContacts = () => {\n    // робить усі символи введені в поле фільтр з малої літери\n    const normalizeFilter = filter.toLowerCase();\n\n    return contacts.filter(person =>\n      person.name.toLowerCase().includes(normalizeFilter),\n    );\n  };\n\n  return (\n    <>\n      <Container>\n        <Section>\n          <h1>Phonebook</h1>\n          <ContactForm getContactData={addContact} />\n        </Section>\n        <Section>\n          <h2>Contacts</h2>\n          <Filter filter={filter} changeFilter={changeFilter} />\n          <ContactList\n            contactList={getFilteredContacts()}\n            onDeleteContact={deleteContact}\n          />\n        </Section>\n      </Container>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './css/common.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}